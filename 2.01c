import java.util.*;

public class Main {
    public static boolean[] visited = new boolean [9];
    public static String[] aux = new String[9];
    public static int count,s1,s2,s3;
    public static void permute(int[] array, String res, int s,int sum) {
            if (s == array.length) {
                aux= res.split(" ");
                
                
                s1 = Integer.parseInt(aux[1])+Integer.parseInt(aux[2])+Integer.parseInt(aux[3])+Integer.parseInt(aux[4]);
                s2 = Integer.parseInt(aux[4])+Integer.parseInt(aux[5])+Integer.parseInt(aux[6])+Integer.parseInt(aux[7]);
                s3 = Integer.parseInt(aux[7])+Integer.parseInt(aux[8])+Integer.parseInt(aux[9])+Integer.parseInt(aux[1]);
               
                if (s1 == sum && s2 == sum && s3 == sum){
                    count ++;
                    
                }
                
            //Procesar la permutación almacenada en el String res
            //Ejemplo: System.out.println(res);
            } else {
                for (int i = 0; i < array.length; i++) {
            // visited es un arreglo de booleanos, definido globalmente, del mismo
            // tamaño del arreglo a permutar, e inicialmente con valores de false
                    if (visited[i]){
                        continue;
                    }
                    visited[i] = true;
                    permute(array, res + array[i] + " ", s+1,sum);
                    visited[i] = false;
                    
                }
            }
    }

    public static void main(String[] args) {
        Scanner e = new Scanner (System.in);
        int[] num = new int[9];
        int p= 0,n,c = e.nextInt();
        
        
        for (int i = 0; i < c; i++) {
            n = e.nextInt();
            for (int j = 0; j < 9; j++) {
                num[j]= e.nextInt();
            }
            count = 0;
            permute(num," ",p,n);
            System.out.println(count);
            
            
        }
        
        
        
        
    
   
        
        
        
  
         
    }
            

}


