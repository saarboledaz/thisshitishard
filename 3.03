import java.util.*;

public class Main {

    public static void main(String[] args) {
        LinkedList<Integer> lista2 = new LinkedList<>();
        HashMap<Integer,equipo> equipos = new HashMap<>();
        Scanner e = new Scanner(System.in);
        int[][] ordenar;
        int c = e.nextInt();
        int equipo,punto, tiempo_e;
        String resultado;
        for (int i = 0;i<c;i++){
            int r = e.nextInt();
            equipos.clear();
            lista2.clear();
            for (int j = 0;j<r;j++){
                equipo = e.nextInt();
                punto = e.nextInt();
                tiempo_e = e.nextInt();
                resultado = e.next();
                if (equipos.containsKey(equipo)){
                    equipos.get(equipo).agregar_registro(punto,tiempo_e,resultado);
                }else{
                    lista2.add(equipo);
                    equipos.put(equipo,new equipo());
                    equipos.get(equipo).agregar_registro(punto,tiempo_e,resultado);
                }
            }
            ordenar = new int[lista2.size()][3];
            int tt = 0;
            for (int k:lista2){
                ordenar[tt][0] = equipos.get(k).resueltos;
                ordenar[tt][1] = equipos.get(k).penalizacion;
                ordenar[tt][2] = k;
                tt++;

            }
            Arrays.sort(ordenar, new Comparator<int[]>() {
                @Override
                public int compare(int[] e1, int[] e2) {

                    if (e1[0] < e2[0]) {
                        return 1;
                    } else if (e1[0] > e2[0]) {
                        return -1;
                    } else {
                        if(e1[1] > e2[1]){
                            return 1;
                        }else if(e1[1] < e2[1]){
                            return -1;
                        }else{
                            if(e1[2] > e2[2]){
                                return 1;
                            }else if(e1[2] < e2[2]){
                                return -1;
                            }else{
                                return 0;
                            }
                        }
                    }
                }
            }
            );
            System.out.println("Maraton "+(i+1)+":");
            for (int k = 0;k<lista2.size();k++){
                if (ordenar[k][0]!=0){
                    System.out.println(ordenar[k][2]+" "+ordenar[k][0]+" "+ordenar[k][1]);
                }
            }
            System.out.println(" ");
        }

    }
}

class equipo{
    HashMap<Integer,String> ejercicios= new HashMap<>();
    int resueltos = 0;
    int pre_penalizacion = 0;
    int penalizacion = 0;

    public void agregar_registro(int p,int t,String r){
        if (ejercicios.containsKey(p)){
            if(!ejercicios.get(p).equals("C")) {
                if (r.equals("C")) {
                    penalizacion += t;
                    penalizacion += pre_penalizacion;
                    resueltos++;
                } else if (r.equals("I")) {
                    pre_penalizacion += 20;
                }
            }
        }else{
            ejercicios.put(p,r);
            if (r.equals("C")){
                penalizacion+=t;
                resueltos++;
            }else if(r.equals("I")){
                pre_penalizacion+=20;
            }
        }
    }
}
